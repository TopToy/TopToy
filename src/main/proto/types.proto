syntax = "proto3";
option java_package = "proto";
package proto;

message BbcMsg {
    int32 propserID = 1;
    int32 cid = 2;
    int32 cidSeries = 3;
    int32 vote = 4;
    Data next = 5;
    bytes auth = 6;
}


message BbcDecision {
    int32 cid = 1;
    int32 cidSeries = 2;
    int32 decosion = 3;
}

message BlockHeader {
    bytes prev= 1;
    int32 creatorID = 2;
    int32 height = 3;
    bytes transactionHash = 4;
    int32 cid = 5;
    int32 cidSeries = 6;
}

message BlockFooter {
    string rmfProof = 1;
    int64 ts = 2;
    bytes orig = 3; // Enable to cerate an empty block
}
message Block {
    BlockHeader header = 1;
    repeated Transaction data = 2;
    BlockFooter footer = 3;
}

//TODO: Adding: client signature, client public key etc.
message Transaction {
    int32 clientID = 1;
    string txID = 2;
    bytes data = 3; // generic type of data
}

message accepted {
    bool accepted = 1;
}

message ForkProof {
    int32 sender = 1;
    Block curr = 2;
//    string currSig = 3;
    Block prev = 4;
//    string prevSig = 5;
}

message RBMsg {
    int32 id = 1;
    int32 cid = 2;
    bytes data = 3;
}

message Empty {

}

message Meta {
    int32 sender = 1;
//    int32 height = 2;
    int32 cid = 2;
    int32 cidSeries = 3;
}

//message Auth {
//    Meta m = 1;
//    bytes hash = 2;
//}

message Data {
    Meta _meta = 1;
    bytes data = 2;
    string sig = 3;
}

message Req {
    Meta _meta = 1;
}

message Res {
    Meta _meta = 1;
    Data _data = 2;
}

//message RmfResult {
////    int32 cid = 1;
////    int32 cidSeries = 2;
//    bytes data = 1;
//    string type = 2;
//}

//message proofedBlock {
//    Block b = 1;
////    int32 cid = 2;
//    string Sig = 3;
//    //    repeated BbcDecision votes = 4;
//}

message subChainVersion {
    int32 forkPoint = 1;
    int32 suggested = 2;
    //    repeated frontSupport fp = 3;
    repeated Block v = 3;
    int32 sender = 4;
}

//message VpbcMsg {
//    int32 clientID = 1;
//    int32 consID = 2;
//    bytes data = 3;
//}